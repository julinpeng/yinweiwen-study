【Remix OS】已收购Android x86，可双系统，分辨率不能调，对AMD支持不行，无法手动切换声卡输出线路。
【Genymotion】基于X86的，虽然可装基于ARM的补丁，但是软件兼容性差，有些app在它上面会打不开点不动之类。
【BlueStacks】最早做模拟器的，在国外独大，但性能欠佳，游戏兼容性差，国内很多助手模拟器都是基于它优化的。
【Hyper-V】不如Vmware方便，Visual Studio 2015 里的 Android 模拟器也是Hyper-V，需安装ARM支持库。



作者：知乎用户
链接：https://www.zhihu.com/question/24815978/answer/236441198
来源：知乎
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。

>>
A problem occurred configuring project ':app'.
> You have not accepted the license agreements of the following SDK components:
# 重新安装sdk(android strudio中)

>>
React Native unable to load script from assets index.android.bundle on windows
具体步骤：报错页面晃动手机，显示菜单 =》 点击Dev Settings =》 点击Debug server host & port for device =》 设置IP和端口（ex:192.168.0.20:8081）=》 点击返回 =》 页面是空白，再次点击摇一摇，选择Reload JS程序就显示出来了

>>

vs code + RN:
 React Native Tools：微软官方出的ReactNative插件,非常好用
 Reactjs code snippets：react的代码提示，如componentWillMount方法可以通过cwm直接获得
 Auto Close Tag：自动闭合标签
 Auto Rename Tag：自动重命名标签，配合上面的插件使用，基本上能赶上IntelliJ IDEA系的功能了
 Path Intellisense：文件路径提示补全
 
 npm install typings -g
typings install dt~react --save
typings install dt~react-native --save
 
>> only use in '.ts' file
{
    "javascript.validate.enable": false
}

>> 理解REACT-NATIVE和原生开发的关系：http://www.jianshu.com/p/97692b1c451d

npm install xxxx --save 下载依赖包
react-native link 或 react-native link xxx 因为有些第三方库是通过原生代码加RN实现的，这个命令自动把相关的配置代码自动添加到Android或ios项目中
1） RN 其实是运行在ReactActivity上
2） MainApplication 继承ReactApplication, 其中getPackage()返回需要与原生交互的包

调试：
VS code --> js IDE  --> npm start （node server）
Android Studio --> java IDE  --> run 'app'
*要先启动node

>>
XxxModule:
    @Override
getName -> js中调用组件名
    @Override
public Map<String, Object> getConstants() 可选，js'常量

    @ReactMethod
    public void show(String message,int duration) 自定义方法，返回void
    @ReactMethod
public void measureLayout(int tag, int ancestorTag, Callback errorCallback,Callback successCallback) 回调  js.measureLayout(..,..,(msg)=>{do something})
  @ReactMethod
public void measureLayout(int tag, int ancestorTag, Promise promise) Promise用法 
		---- 插入 --- js. promise
		async function xxx{
			try{
				var {xxx,xxx}=await Xxx.measureLayout(100,100);
				console.log(xxx);
			}catch(e){console.log(e)}
		}
	
	多线程：
	耗时操作 使用内部管理的工作现场 通常AsyncTask
	
	
>>
XxxPackage implements ReactPackage
	
    @Override
    public List<ViewManager> createViewManagers(ReactApplicationContext reactContext) {
        return Collections.emptyList();
    }
	 @Override
    public List<NativeModule> createNativeModules(ReactApplicationContext reactContext) {
        List<NativeModule> modules=new ArrayList<>();
        modules.add(new XxxModule(reactContext));
        return modules;
    }
	** 注意，要在MainApplicationt.getPackages方法中增加次继承类
	
Boolean -> Bool
Integer -> Number
Double -> Number
Float -> Number
String -> String
Callback -> function
ReadableMap -> Object
ReadableArray -> Array


>>  发送事件到JavaScript

    public void DoSomething(){
        WritableMap map=Arguments.createMap();
        map.putDouble("test",3.1415926);
        getReactApplicationContext().getJSModule(DeviceEventManagerModule.RCTDeviceEventEmitter.class).emit("eventname",map);
    }
	
import { DeviceEventEmitter } from 'react-native';

    componentWillMount(){
        DeviceEventEmitter.addListener('test', (e)=>{console.log(e)});
    }
	
>> >> 原生UI组件
1. 创建一个ViewManager的子类。
2. 实现createViewInstance方法。
3. 导出视图的属性设置器：使用@ReactProp（或@ReactPropGroup）注解。
4. 把这个视图管理类注册到应用程序包的createViewManagers里。
5. 实现JavaScript模块。


** Android Studio中添加单元测试：
http://www.jianshu.com/p/03118c11c199
在类名位置右击，选择 Goto -> Test ,
自动创建单元测试，并自动Gradle中添加JUNIT4的引用

